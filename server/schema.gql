# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  username: String!
  email: String!
  firstName: String!
  lastName: String!
  fullName: String!
  avatar: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserResponse {
  _id: ID
  createdAt: DateTime
  updatedAt: DateTime
  username: String
  email: String
  firstName: String
  lastName: String
  fullName: String
  avatar: String
  token: String!
}

type Permission {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
}

type Region {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
}

type Role {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
}

type Tournament {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
  number: Float!
  international: Float!
  region: Region
}

type Season {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
  description: String!
  year: Float!
  number: Float!
  tournament: Tournament
}

type Team {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  name: String!
  description: String!
  number: Float!
  region: Region
}

type Query {
  me: User!
  regions: [Region!]!
  region(_id: String!): Region!
  tournaments: [Tournament!]
  tournament(_id: String!): Tournament!
  seasons: [Season!]
  season(_id: String!): Season!
  teams: [Team!]
  team(_id: String!): Team!
}

type Mutation {
  register(createUserInput: CreateUserInput!): UserResponse!
  login(loginInput: LoginInput!): UserResponse!
  createRegion(createRegionInput: CreateRegionInput!): Region!
  updateRegion(updateRegionInput: UpdateRegionInput!): Region!
  deleteRegion(_id: String!): Boolean!
  createTournament(createTournamentInput: CreateTournamentInput!): Tournament!
  updateTournament(updateTournamentInput: UpdateTournamentInput!): Tournament!
  deleteTournament(_id: String!): Boolean!
  createSeason(createSeasonInput: CreateSeasonInput!): Season!
  updateSeason(updateSeasonInput: UpdateSeasonInput!): Season!
  deleteSeason(_id: String!): Boolean!
  createTeam(createTeamInput: CreateTeamInput!): Team!
  updateTeam(updateTeamInput: UpdateTeamInput!): Team!
  deleteTeam(_id: String!): Boolean!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input LoginInput {
  usernameOrEmail: String!
  password: String!
}

input CreateRegionInput {
  code: String!
  name: String!
}

input UpdateRegionInput {
  _id: String!
  code: String!
  name: String!
}

input CreateTournamentInput {
  code: String!
  name: String!
  number: Float!
  international: Float!
  regionId: String!
}

input UpdateTournamentInput {
  _id: String!
  code: String!
  name: String!
  number: Float!
  international: Float!
  regionId: String!
}

input CreateSeasonInput {
  code: String!
  name: String!
  description: String!
  year: Float!
  number: Float!
  tournamentId: String!
}

input UpdateSeasonInput {
  _id: String!
  code: String!
  name: String!
  description: String!
  year: Float!
  number: Float!
  tournamentId: String!
}

input CreateTeamInput {
  code: String!
  name: String!
  description: String!
  number: Float!
  regionId: String!
}

input UpdateTeamInput {
  _id: String!
  code: String!
  name: String!
  description: String!
  number: Float!
  regionId: String!
}
